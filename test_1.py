from q2numfmt import format_number


def run_tests():
    test_cases = [
        ("768.00", "#,##0.00", "768.00"),
        ("1008.00", "#,##0.00", "1,008.00"),
        ("1234.59", "#", "1235"),
        ("1234.59", "####.#", "1234.6"),
        ("8.9", "#.000", "8.900"),
        ("0.631", "0.#", "0.6"),
        ("12", "#.0#", "12.0"),
        ("1234.568", "#.0#", "1234.57"),
        ("1234.568", "0.00", "1234.57"),
        ("44.398", "#.0#", "44.4"),
        ("44.398", "????.???", "  44.398"),
        ("102.65", "???.???", "102.65 "),
        ("2.65", "??.???", " 2.65 "),
        ("2.8", "???.???", "  2.8  "),
        ("1234.59", "####.#", "1234.6"),
        ("8.9", "#.000", "8.900"),
        (".631", "0.#", "0.6"),
        ("1234.568", "#.0#", "1234.57"),
        ("5.25", "# ???/???", "5   1/4  "),
        ("5.3", "# ???/???", "5   3/10 "),
        ("5.3", "# ?/?", "5 3/10"),
        ("12000", "#,###", "12,000"),
        ("12000", "#,", "12"),
        ("12200000", "0.0,,", "12.2"),
        ("-1234", "#,##0;[Red](#,##0)", "(1,234)"),
        ("1234", "#,##0;[Red](#,##0)", "1,234"),
        ("0", "#,##0;[Red](#,##0);Zero", "Zero"),
        ("0.146", "0.####%", "14.6%"),
        ("4566", "$0.####", "$4566"),
        ("43221", "yy-m", "18-5"),
        ("43221", "yyyy-m", "2018-5"),
        ("43221", "yyyy-mmm", "2018-May"),
        ("43221", "yyyy-mmm-d", "2018-May-1"),
        ("43221", "yyyy-mmm-dd", "2018-May-01"),
        ("43221", "yyyy-mmm-ddd", "2018-May-Tue"),
        ("43221", "yyyy mmm  dddd", "2018 May  Tuesday"),
        ("43221.456", "YYYY-MM-DD HH:MM:SS.000", "2018-05-01 10:56:38.000"),
    ]

    passed = 0
    for i, (value, fmt, expected) in enumerate(test_cases, 1):
        try:
            result = format_number(value, fmt)
            assert result == expected, f"Test {i} failed: {result!r} != {expected!r}"
            print(f"Test {i} passed.")
            passed += 1
        except AssertionError as e:
            print(e)
        except Exception as e:
            print(f"Test {i} raised an unexpected exception: {e}")

    print(f"\n{passed}/{len(test_cases)} tests passed.")
    assert passed == len(test_cases)


if __name__ == "__main__":
    run_tests()
